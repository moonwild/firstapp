{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book-about/book-about.component.css","webpack:///./src/app/book-about/book-about.component.html","webpack:///./src/app/book-about/book-about.component.ts","webpack:///./src/app/book-edit/book-edit.component.css","webpack:///./src/app/book-edit/book-edit.component.html","webpack:///./src/app/book-edit/book-edit.component.ts","webpack:///./src/app/book-home/book-home.component.css","webpack:///./src/app/book-home/book-home.component.html","webpack:///./src/app/book-home/book-home.component.ts","webpack:///./src/app/book-list/book-list.component.css","webpack:///./src/app/book-list/book-list.component.html","webpack:///./src/app/book-list/book-list.component.ts","webpack:///./src/app/bookorama.service.ts","webpack:///./src/app/ef-details/ef-details.component.css","webpack:///./src/app/ef-details/ef-details.component.html","webpack:///./src/app/ef-details/ef-details.component.ts","webpack:///./src/app/enter-form/enter-form.component.css","webpack:///./src/app/enter-form/enter-form.component.html","webpack:///./src/app/enter-form/enter-form.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/regist-form/regist-form.component.css","webpack:///./src/app/regist-form/regist-form.component.html","webpack:///./src/app/regist-form/regist-form.component.ts","webpack:///./src/app/shared/book.model.ts","webpack:///./src/app/shared/book.service.ts","webpack:///./src/app/usersdata.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BookListComponent } from './book-list/book-list.component';\r\nimport { BookAboutComponent } from './book-about/book-about.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { BookHomeComponent } from './book-home/book-home.component';\r\n\r\nimport { BookEditComponent } from './book-edit/book-edit.component';\r\nimport { EnterFormComponent } from './enter-form/enter-form.component';\r\nimport { RegistFormComponent } from './regist-form/regist-form.component';\r\n//Добавлен новый компонент\r\nimport { EfDetailsComponent } from './ef-details/ef-details.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: BookHomeComponent },\r\n    { path: 'book-home', component: BookHomeComponent },\r\n    { path: 'book-list', component: BookListComponent },\r\n    { path: 'enter-form', component: EnterFormComponent },\r\n    { path: 'regist-form', component: RegistFormComponent },\r\n    { path: 'book-about', component: BookAboutComponent },\r\n    { path: 'book/edit/:id', component: BookEditComponent },\r\n    //Добавлен новый компонент\r\n    { path: 'ef-details/:id', component: EfDetailsComponent },\r\n    { path: '**', component: PageNotFoundComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }","module.exports = \"@import url('https://fonts.googleapis.com/css?family=Muli:400,700');\\r\\n\\r\\nbody {\\r\\n    background:#e8e8e8;\\r\\n    font-family: 'Muli';\\r\\n}\\r\\n\\r\\n/* div.bgcblue{\\r\\n    background-color:#58B3F1;\\r\\n    height: 800px;\\r\\n} */\\r\\n\\r\\ndiv .apptitle{\\r\\n    color: #263238;\\r\\n    font-family: 'Libre Barcode 128 Text', cursive;\\r\\n    font-size: 75px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nh2.slogan{\\r\\n    font-size: 30px;\\r\\n    color: #e8e8e8;\\r\\n    text-align: center;\\r\\n    font-family: 'Lato';\\r\\n    font-weight: 400;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.h300{\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    padding: 50px;\\r\\n}\\r\\n\\r\\ndiv.bgcpink > .startnow{\\r\\n    padding: 20px;\\r\\n    color: rgb(51, 51, 236);\\r\\n    background-color: rgb(247, 177, 152);\\r\\n    font-size: 34px;\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    text-align: center;\\r\\n    display: block;\\r\\n    text-decoration: none;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\ndiv.bgcpink > .startnow:hover{\\r\\n    background-color:rgb(224, 147, 91);\\r\\n    color: rgb(79, 79, 221);\\r\\n\\r\\n}\\r\\n\\r\\nbutton{\\r\\n    text-transform: uppercase;\\r\\n}\\r\\n\\r\\nbutton.active{\\r\\n    background-color: #9ccc65;\\r\\n    color:blue;\\r\\n}\\r\\n\\r\\ndiv.enter-form{\\r\\n    margin-right: 0;\\r\\n\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"wrapper\\\">\\n    <div class=\\\"bgcblue\\\">\\n\\n        <mat-toolbar color=\\\"primary\\\" class=\\\"h300\\\">\\n            <nav>\\n                <button mat-flat-button color=\\\"primary\\\" routerLink = \\\"/book-home\\\" routerLinkActive = \\\"active\\\">Добавить книги</button>\\n                <button mat-flat-button color=\\\"primary\\\" routerLink = \\\"/book-list\\\" routerLinkActive = \\\"active\\\">Редактировать</button>\\n                <button mat-flat-button color=\\\"primary\\\" routerLink = \\\"/book-about\\\" routerLinkActive = \\\"active\\\">Топ 10 книг</button>\\n            </nav>\\n            <h1 class=\\\"apptitle\\\">Bookorama</h1>\\n            <nav>\\n                <button mat-flat-button color=\\\"primary\\\" routerLink = \\\"/enter-form\\\" routerLinkActive = \\\"active\\\">Войти</button>\\n                <button mat-flat-button color=\\\"primary\\\" routerLink = \\\"/regist-form\\\" routerLinkActive = \\\"active\\\">Регистрация</button>\\n            </nav>\\n\\n\\n\\n\\n        </mat-toolbar>\\n\\n\\n\\n        <!-- <h2 class=\\\"slogan\\\">Save your most favorite books here!</h2> -->\\n\\n        <!-- <app-enter-form></app-enter-form> -->\\n\\n\\n\\n    </div>\\n\\n</div>\\n\\n\\n\\n<router-outlet></router-outlet>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BookoramaService } from './bookorama.service';\n//import { FormGroup, FormControl } from '../../node_modules/@angular/forms';\n//import { FormGroup, FormControl} from '@angular/forms';\n\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\nexport class AppComponent implements OnInit {\n\n  public books = [];\n\n  constructor(private _bookorama: BookoramaService){\n\n  }\n\n  ngOnInit(){\n    this.books = this. _bookorama. getListBooks();\n  }\n\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n//Добавлен\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppComponent } from './app.component';\n\n\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\n\n\n\nimport { ReactiveFormsModule, FormsModule } from '../../node_modules/@angular/forms';\n\n\nimport { BookoramaService } from './bookorama.service';\nimport { BookHomeComponent } from './book-home/book-home.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookListComponent } from './book-list/book-list.component';\nimport { BookAboutComponent } from './book-about/book-about.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { bookService } from './shared/book.service';\nimport { BookEditComponent } from './book-edit/book-edit.component';\nimport { EnterFormComponent } from './enter-form/enter-form.component';\nimport { RegistFormComponent } from './regist-form/regist-form.component';\nimport { EfDetailsComponent } from './ef-details/ef-details.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookHomeComponent,\n    BookListComponent,\n    BookAboutComponent,\n    PageNotFoundComponent,\n    BookEditComponent,\n    EnterFormComponent,\n    RegistFormComponent,\n    EfDetailsComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    //Добавлен\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconModule\n\n  ],\n  providers: [BookoramaService, bookService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".bgc{\\r\\n    background:#f1f8e9;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.wrapper{\\r\\n    margin: 0 auto;\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\np{\\r\\n    padding-top: 20px;\\r\\n    margin-left: 20px;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    margin-bottom: 35px;\\r\\n    margin-top: 40px;\\r\\n}\\r\\n\\r\\na{\\r\\n    margin-left: 20px;\\r\\n    padding-top: 20px;\\r\\n}\"","module.exports = \"<!-- <p>\\n  book-about works!\\n</p> -->\\n<div class=\\\"bgc\\\">\\n  <p>В 2003 году в Объединенном королевстве Великобритании телеканал и радиостанция BBC провели глобальный опрос жителей страны\\n    с призывом голосовать за их любимые книги всех времен. Голосование длилось с апреля по октябрь, участие в опросе приняли\\n    более 1 млн. человек.</p>\\n  <p>В итоге был составлен известный список 200 лучших романов (The Big Read) по версии BBC, которые считаются лучшими литературнымипроизведениями\\n    всех времен. Сам список представляет собой микс из любимых детских книг и классических произведений, но все же в списке\\n    больше современной литературы.</p>\\n\\n  <div class=\\\"wrapper\\\">\\n\\n    <h2 class=\\\"title\\\">Топ-10 по версии BBC</h2>\\n    <ul *ngFor=\\\"let book of allBooks\\\">\\n      <mat-card>\\n        <li (click)=\\\"onSelect(book)\\\">№{{book.id}} Автор: {{book.author}}\\n          <br> Название: {{book.book}}</li>\\n      </mat-card>\\n    </ul>\\n\\n  </div>\\n\\n  <a href=\\\"https://ru.wikipedia.org/wiki/200_%D0%BB%D1%83%D1%87%D1%88%D0%B8%D1%85_%D0%BA%D0%BD%D0%B8%D0%B3_%D0%BF%D0%BE_%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D0%B8_%D0%91%D0%B8-%D0%B1%D0%B8-%D1%81%D0%B8\\\">Полная версия списка</a>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookoramaService } from '../bookorama.service';\n\n@Component({\n  selector: 'app-book-about',\n  templateUrl: './book-about.component.html',\n  styleUrls: ['./book-about.component.css']\n})\nexport class BookAboutComponent implements OnInit {\n  public allBooks = [];\n\n\n  constructor(private _router: Router, private _bookorama1: BookoramaService) { }\n\n  ngOnInit() {\n    this.allBooks = this._bookorama1.getListBooks();\n  }\n\n  onSelect() {\n\n  }\n\n}\n","module.exports = \".wrapper {\\r\\n  max-width: 1000px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.bgc {\\r\\n  background: #f1f8e9;\\r\\n  height: 100vh;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  width: 500px;\\r\\n}\\r\\n\\r\\n.label {\\r\\n  margin-right: 30px;\\r\\n  margin-left: 40px;\\r\\n}\\r\\n\\r\\n.btn-back {\\r\\n  margin-top: 30px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bgc\\\">\\n  <div class=\\\"wrapper\\\">\\n    <mat-card>\\n      <div *ngIf=\\\"book\\\">\\n        <div>\\n          <div>\\n            <label class=\\\"label\\\" for=\\\"name\\\">Название книги:</label>\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"book.book\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div>\\n          <div>\\n            <mat-checkbox [(ngModel)]=\\\"book.completed\\\">Прочитана!</mat-checkbox>\\n          </div>\\n        </div>\\n      </div>\\n    </mat-card>\\n\\n    <button class=\\\"btn-back\\\" mat-flat-button routerLink=\\\"/book-list\\\">Назад</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '../../../node_modules/@angular/router';\nimport { bookService } from '../shared/book.service';\nimport { Book } from '../shared/book.model';\n\n@Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.css']\n})\nexport class BookEditComponent implements OnInit {\n\n  book: Book\n\n  constructor(private _currentRoute: ActivatedRoute, private _service: bookService) { }\n\n  ngOnInit() {\n    let id: number = +this._currentRoute.snapshot.paramMap.get(\"id\");\n    this.book = this._service.getById(id);\n  }\n\n}\n","module.exports = \".title_h3 {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.d-f {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.wrapper {\\r\\n  max-width: 1000px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  text-align: center;\\r\\n  margin-top: 30px;\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.title_h3 {\\r\\n  padding-top: 30px;\\r\\n}\\r\\n\\r\\n.title_h4 {\\r\\n  padding-top: 30px;\\r\\n  padding-bottom: 20px;\\r\\n}\\r\\n\\r\\np {\\r\\n  margin-left: 20px;\\r\\n  margin-right: 20px;\\r\\n  text-align: justify;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.form-control-search {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.form-group-search {\\r\\n  margin-bottom: 70px;\\r\\n}\\r\\n\"","module.exports = \"<div>\\n  <h1 class=\\\"title\\\">Добавьте книгу</h1>\\n  <p>С другой стороны укрепление и развитие структуры играет важную роль в формировании направлений прогрессивного развития.Значимость\\n    этих проблем настолько очевидна, что реализация намеченных плановых заданий требуют от нас анализа соответствующийусловий\\n    активизации. Повседневная практика показывает, что реализация намеченных плановых заданий позволяет выполнять важные\\n    задания по разработке новых предложений. Разнообразный и богатый опыт дальнейшее развитие различных форм деятельности\\n    требуют от нас анализа существенных финансовых и административных условий. Значимость этих проблем настолько очевидна,\\n    что начало повседневной работы по формированию позиции в значительной степени обуславливает создание систем массового\\n    участия.\\n  </p>\\n\\n\\n  <div class=\\\"wrapper\\\">\\n    <div class=\\\"container-fluid\\\">\\n\\n      <div class=\\\"form-group form-group-search\\\">\\n        <label for=\\\"\\\">Поиск</label>\\n        <input type=\\\"text\\\" class=\\\"form-control form-control-search\\\" [(ngModel)]=\\\"search\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onSearch()\\\">Найти книгу</button>\\n\\n        <h3 class=\\\"title_h4\\\" *ngIf=\\\"xy?.title\\\">{{xy?.title}} уже добавлена</h3>\\n\\n      </div>\\n\\n      <form #bookForm=\\\"ngForm\\\" novalidate>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Название книги</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bookName\\\" #name1=\\\"ngModel\\\" required [class.is-invalid]=\\\"name1.invalid && name1.touched\\\"\\n            [(ngModel)]=\\\"bookModel.title\\\">\\n          <small *ngIf=\\\"name1.invalid && name1.touched\\\">Введите название</small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Автор книги</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"author\\\" #author=\\\"ngModel\\\" required [class.is-invalid]=\\\"author.invalid && author.touched\\\"\\n            [(ngModel)]=\\\"bookModel.author\\\">\\n          <small *ngIf=\\\"author.invalid && author.touched\\\">Введите автора</small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Год издания</label>\\n          <select class=\\\"custom-select\\\" name=\\\"years\\\" #year=\\\"ngModel\\\" required [class.is-invalid]=\\\"year.invalid && year.touched\\\" [(ngModel)]=\\\"bookModel.year\\\">\\n            <option value=\\\"\\\">Выберите год </option>\\n            <option *ngFor=\\\"let year of years\\\">{{ year }}</option>\\n          </select>\\n\\n        </div>\\n      </form>\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"addBook(bookModel.title, bookModel.author, bookModel.year)\\\"\\n      [disabled]=\\\"!bookForm.form.valid\\\">Добавить книгу</button>\\n\\n\\n\\n    <!-- <h2>Добавленные книги</h2> -->\\n    <h4 class=\\\"title_h4\\\" *ngIf=\\\"countBook>0; else elseBlock\\\">Добавлено книг: {{countBook}}</h4>\\n    <ng-template #elseBlock>\\n      <h3 class=\\\"title_h3\\\">Нет добавленных книг</h3>\\n    </ng-template>\\n\\n    <mat-card *ngFor=\\\"let book of books; let i = index\\\">\\n      <div class=\\\"d-f\\\">\\n        <div>{{book.title}} {{book.author}} - {{book.year}} год</div>\\n\\n        <div>\\n          <button mat-icon-button (click)=\\\"deliteBook(i)\\\">\\n            <mat-icon color=\\\"accent\\\">delete_sweep</mat-icon>\\n          </button>\\n        </div>\\n      </div>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n\n\nexport class FavBook {\n  constructor(\n    public title: string = '',\n    public author: string = '',\n    public year: number) { }\n}\n\n\n@Component({\n  selector: 'app-book-home',\n  templateUrl: './book-home.component.html',\n  styleUrls: ['./book-home.component.css']\n})\nexport class BookHomeComponent implements OnInit {\n\n  public countBook: number;\n\n  public years = [1900, 1950, 2000, 2050, 8080];\n\n  bookModel = new FavBook('\"Мастер и Маргарита\"', 'М. Булгаков', 1966);\n  books: FavBook[] = [];\n\n  addBook(title: string, author: string, year: number) {\n    this.books.push(new FavBook(title, author, year));\n    this.countBook = this.books.length;\n    console.log(this.books);\n  }\n\n  deliteBook(i: number) {\n    this.books.splice(i, 1);\n    this.countBook = this.books.length;\n  }\n\n  public search = '';\n  public xy: FavBook;\n\n\n  onSearch() {\n    this.xy = this.books.find(x => x.title === this.search);\n    return this.xy;\n  }\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n\n  }\n\n\n}\n\n\n","module.exports = \".completed {\\r\\n  text-decoration: line-through;\\r\\n}\\r\\n\\r\\n.wrapper {\\r\\n  max-width: 1000px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.bgc {\\r\\n  background: #f1f8e9;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  padding-top: 20px;\\r\\n  padding-bottom: 30px;\\r\\n}\\r\\n\\r\\n.btn-ed {\\r\\n  margin-right: 0;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin-right: 20px;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n  margin-top: 30px;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\nspan {\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\\r\\n.wrap-form {\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"wrapper\\\">\\n\\n  <div class=\\\"wrap-form\\\">\\n    <h3 class=\\\"title\\\">Добавить книгу</h3>\\n    <form #bookForm=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">Порядковый номер книги</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"id\\\" #listid=\\\"ngModel\\\" [(ngModel)]=\\\"bookList.id\\\" required [class.is-invalid]=\\\"listid.invalid && listid.touched\\\">\\n        <small *ngIf=\\\"listid.invalid && listid.touched\\\">Введите номер</small>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">Название книги</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" #listname=\\\"ngModel\\\" [(ngModel)]=\\\"bookList.book\\\" required [class.is-invalid]=\\\"listname.invalid && listname.touched\\\">\\n        <small *ngIf=\\\"listname.invalid && listname.touched\\\">Введите название</small>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">Автор книги</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"author\\\" #listauthor=\\\"ngModel\\\" [(ngModel)]=\\\"bookList.author\\\" required [class.is-invalid]=\\\"listauthor.invalid && listauthor.touched\\\">\\n        <small *ngIf=\\\"listauthor.invalid && listauthor.touched\\\">Введите автора</small>\\n      </div>\\n\\n    </form>\\n    <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onCreate(bookList.id, bookList.author, bookList.book, bookList.completed)\\\">Добавить</button>\\n  </div>\\n\\n\\n  <h3 class=\\\"title\\\">Что я хочу прочесть</h3>\\n  <ul *ngFor=\\\"let book of books\\\">\\n    <mat-card>\\n      <li>№{{book.id}}\\n        <br>Author: {{book.name}}\\n        <br>Book: {{book.author}}\\n      </li>\\n    </mat-card>\\n  </ul>\\n\\n\\n\\n  <ul *ngFor=\\\"let book of booksNew; let i = index\\\">\\n    <mat-card>\\n      <div class=\\\"li\\\">\\n        <li [class.completed]=\\\"book.completed\\\">\\n          <span>{{i+1}}.</span>{{book.author}} {{book.book}}</li>\\n      </div>\\n      <div class=\\\"btn-ed\\\">\\n        <button mat-flat-button (click)=\\\"onEdit(book)\\\">Редактировать</button>\\n        <button mat-flat-button (click)=\\\"onDelete(i)\\\">Удалить</button>\\n      </div>\\n    </mat-card>\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { bookService } from '../shared/book.service';\nimport { Book } from '../shared/book.model';\nimport { Router } from '../../../node_modules/@angular/router';\n\n\n\n\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.css']\n})\nexport class BookListComponent implements OnInit {\n\n  public books = [];\n  public booksNew: Book[] = [];\n\n  bookList = new Book(null, '', '', false);\n\n\n  constructor(private _bookservice: bookService, private _router: Router) { }\n\n  ngOnInit() {\n    this.booksNew = this._bookservice.getAll();\n  };\n\n  onCreate(book: Book) {\n    this.booksNew.push(this.bookList);\n  }\n\n  onEdit(book: Book) {\n    this._router.navigate([\"book\", \"edit\", book.id]);\n  }\n\n  onDelete(i) {\n    this.booksNew.splice(i, 1);\n  }\n\n\n}\n\n\n\n\n","import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookoramaService {\n\n  constructor() { }\n\n  getListBooks() {\n    return [\n      { id: 1, author: 'Джон Р. Р. Толкин', book: '\"Властелин колец\"' },\n      { id: 2, author: 'Джейн Остин', book: '\"Гордость и предубеждение\"' },\n      { id: 3, author: 'Филип Пулман', book: '\"Тёмные начала\"' },\n      { id: 4, author: 'Дуглас Адамс', book: '\"Автостопом по галактике\"' },\n      { id: 5, author: 'Джоан Роулинг', book: '\"Гарри Поттер и Кубок огня\"' },\n      { id: 6, author: 'Харпер Ли', book: '\"Убить пересмешника\"' },\n      { id: 7, author: 'Алан Александр Милн', book: '\"Винни Пух\"' },\n      { id: 8, author: 'Джордж Оруэлл', book: '\"1984\"' },\n      { id: 9, author: 'Клайв Стэйплз Льюис', book: '\"Лев, колдунья и платяной шкаф\"' },\n      { id: 10, author: 'Шарлотта Бронте', book: '\"Джейн Эйр\"' },\n    ];\n  }\n\n  addBook() {\n\n  }\n}\n","module.exports = \"strong {\\r\\n  margin-right: 10px;\\r\\n  margin-left: 30px;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  text-align: center;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.btn-back {\\r\\n  margin-left: 30px;\\r\\n}\\r\\n\"","module.exports = \"<h1>{{ user.name}}</h1>\\n\\n<ul>\\n  <li>\\n    <strong>Name:</strong>{{ user.name}}</li>\\n  <li>\\n    <strong>Email:</strong>{{ user.email}}</li>\\n  <li>\\n    <strong>Phone:</strong>{{ user.phone}}</li>\\n</ul>\\n\\n<button class=\\\"btn-back\\\" mat-flat-button routerLink=\\\"/enter-form\\\">Назад</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UsersdataService } from '../usersdata.service';\n\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-ef-details',\n  templateUrl: './ef-details.component.html',\n  styleUrls: ['./ef-details.component.css']\n})\nexport class EfDetailsComponent implements OnInit {\n\n  public user: Object;\n\n  constructor(private data: UsersdataService, private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.user = params.id)\n  }\n\n  ngOnInit() {\n    this.data.getUser(this.user).subscribe(\n      data => this.user = data\n    )\n\n  }\n\n}\n","module.exports = \".form-container {\\r\\n  display: block;\\r\\n  background: #f1f8e9;\\r\\n  width: 500px;\\r\\n  margin: 50px auto;\\r\\n}\\r\\n\\r\\n.flex {\\r\\n  padding: 0 20px 20px 20px;\\r\\n}\\r\\n\\r\\ninput {\\r\\n  font-size: 20px;\\r\\n}\\r\\n\\r\\nmat-error {\\r\\n  font-size: 15px;\\r\\n}\\r\\n\\r\\n.center-cont h1 {\\r\\n  font-size: 30px;\\r\\n  padding-top: 30px;\\r\\n  font-family: 'Lato', sans-serif;\\r\\n}\\r\\n\\r\\n.mat-flat-button {\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  margin: 20px 0px;\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n  padding-bottom: 0.8em;\\r\\n  width: 450px;\\r\\n}\\r\\n\\r\\n.button {\\r\\n  margin-top: 3rem;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  margin-bottom: 2rem;\\r\\n  font-weight: bold;\\r\\n  font-family: 'Muli';\\r\\n  font-size: 2em;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  width: 600px;\\r\\n}\\r\\n\\r\\n.wrapper {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  text-align: center;\\r\\n  margin-top: 30px;\\r\\n  font-family: 'Lato', sans-serif;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bgc\\\">\\n  <div class=\\\"wrapper\\\">\\n\\n    <form [formGroup]=\\\"rForm\\\">\\n      <div class=\\\"form-container\\\">\\n        <div class=\\\"center-cont\\\">\\n          <h1>Авторизация</h1>\\n          <div class=\\\"flex\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Логин\\\" formControlName=\\\"name\\\">\\n\\n            </mat-form-field>\\n\\n            <br>\\n            <mat-form-field>\\n\\n              <input matInput type=\\\"password\\\" placeholder=\\\"Пароль\\\" formControlName=\\\"password\\\">\\n\\n              <mat-error *ngIf=\\\"rForm.controls.password.invalid && rForm.controls.password.touched\\\">Пароль должен содержать минимум 6 символов</mat-error>\\n            </mat-form-field>\\n            <br>\\n\\n\\n            <button class=\\\"btn-log\\\" mat-flat-button color=\\\"primary\\\" [disabled]=\\\"!rForm.valid\\\">Войти </button>\\n\\n          </div>\\n\\n        </div>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\\n<h1>Наши наиболее активные пользователи</h1>\\n\\n<table mat-table [dataSource]=\\\"users\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n  <!-- ID Column -->\\n  <ng-container matColumnDef=\\\"user.id\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n    <td mat-cell *matCellDef=\\\"let user\\\"> {{user.id}} </td>\\n  </ng-container>\\n\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"user.name\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n    <td mat-cell *matCellDef=\\\"let user\\\">\\n      <a routerLink=\\\"/ef-details/{{user.id}}\\\">{{user.name}}</a>\\n    </td>\\n  </ng-container>\\n\\n  <!-- Email Column -->\\n  <ng-container matColumnDef=\\\"user.email\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n    <td mat-cell *matCellDef=\\\"let user\\\"> {{user.email}} </td>\\n  </ng-container>\\n\\n  <!-- Website Column -->\\n  <ng-container matColumnDef=\\\"user.website\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Website </th>\\n    <td mat-cell *matCellDef=\\\"let user\\\">\\n      <a href=\\\"http://{{user.website}}\\\">{{user.website}}</a>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay;\\\"></tr>\\n</table>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UsersdataService } from '../usersdata.service';\n\nimport { MatTableDataSource } from '@angular/material';\n\n\n\n@Component({\n  selector: 'app-enter-form',\n  templateUrl: './enter-form.component.html',\n  styleUrls: ['./enter-form.component.css']\n})\nexport class EnterFormComponent implements OnInit {\n\n\n  public rForm: FormGroup;\n  public password: any;\n  public name: string = '';\n\n  //Материал таблица\n  public users: Object;\n  columnsToDisplay = ['user.id', 'user.name', 'user.email', 'user.website'];\n  dataSourse = this.users;\n\n  constructor(private fb: FormBuilder, private data: UsersdataService) {\n\n    this.rForm = fb.group({\n      name: [null, Validators.compose([\n        Validators.required\n        ])],\n      password: [null, Validators.compose([\n        Validators.required\n        ])\n      ],\n\n    });\n\n\n\n  }\n\n\n\n  ngOnInit() {\n    this.data.getUsers().subscribe(\n      data => this.users = data\n    )\n\n  }\n\n\n}\n\n","module.exports = \"p.nfound{\\r\\n    margin-top: 100px;\\r\\n    color: #285942;\\r\\n    font-family: 'Libre Barcode 128 Text', cursive;\\r\\n    font-size: 145px;\\r\\n}\\r\\n\\r\\ndiv.wrappernf{\\r\\n    background-color: #e6ee9c;\\r\\n    height: 100px;\\r\\n}\"","module.exports = \"<div class=\\\"wrappernf\\\">\\n  <p class=\\\"nfound\\\">\\n    Page-not-found 404!\\n  </p>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".bgc{\\r\\n    background-color:#f1f8e9;\\r\\n    height: 100vh;\\r\\n\\r\\n}\\r\\n\\r\\n.wrapper{\\r\\n    max-width: 700px;\\r\\n    padding-top: 100px;\\r\\n    margin: 0px auto;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    text-align: center;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\na{\\r\\n    margin-left: 30px;\\r\\n}\\r\\n\\r\\n.radio-group{\\r\\n    display: block;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 15px;\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\n.flex{\\r\\n    max-width: 700px;\\r\\n}\\r\\n\\r\\n.mat-form-field{\\r\\n    width: 700px;\\r\\n\\r\\n}\\r\\n\\r\\n.btn-create{\\r\\n    margin-top: 30px;\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"bgc\\\">\\n\\n\\n  <div class=\\\"wrapper containet-fluid\\\">\\n\\n    <form [formGroup]=\\\"registForm\\\" (ngSubmit)=\\\"registIn(registForm.value)\\\">\\n\\n\\n      <h1 class=\\\"title\\\">Регистрация</h1>\\n      <p>Перед регистрацией необходимо прочесть и согласиться с нашими правилами.\\n      </p>\\n\\n\\n      <a href=\\\"#\\\">Какие-то правила</a>\\n\\n\\n      <mat-radio-group class=\\\"radio-group\\\">\\n        <mat-radio-button value=\\\"1\\\" checked>Я прочел правила и согласен с ними</mat-radio-button>\\n        <mat-radio-button value=\\\"2\\\">Согласен со всем не читая</mat-radio-button>\\n      </mat-radio-group>\\n\\n      <div class=\\\"flex\\\">\\n        <mat-form-field>\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Логин\\\" formControlName=\\\"login\\\">\\n\\n          <mat-error *ngIf=\\\"registForm.controls.login.invalid && registForm.controls.login.touched\\\">Введите логин</mat-error>\\n\\n        </mat-form-field>\\n\\n        <br>\\n\\n        <mat-form-field>\\n          <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n\\n          <mat-error *ngIf=\\\"registForm.controls.email.invalid && registForm.controls.email.touched\\\">Введите email</mat-error>\\n\\n        </mat-form-field>\\n\\n        <br>\\n\\n        <mat-form-field>\\n\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Пароль\\\" formControlName=\\\"password\\\">\\n\\n          <mat-error *ngIf=\\\"registForm.controls.password.invalid && registForm.controls.password.touched\\\">Введите пароль</mat-error>\\n\\n          <mat-hint>Пароль должен содержать минимум 6 символов и включать хотя бы одну цифру</mat-hint>\\n        </mat-form-field>\\n        <br>\\n\\n\\n        <button class=\\\"btn-create\\\" mat-flat-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!registForm.valid\\\">Создать аккаунт</button>\\n\\n      </div>\\n\\n\\n\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-regist-form',\n  templateUrl: './regist-form.component.html',\n  styleUrls: ['./regist-form.component.css']\n})\nexport class RegistFormComponent implements OnInit {\n\n  public registForm: FormGroup;\n  public reg: any;\n  public login: any;\n  public password: any;\n  public email: any;\n\n  constructor(private fb: FormBuilder) {\n\n    this.registForm = fb.group({\n      login: [null, Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9]+$'),\n        Validators.minLength(5)])],\n      email: [null, Validators.compose([\n        Validators.required,\n        Validators.email])\n      ],\n      password: [null, Validators.compose([\n        Validators.required,\n        Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        Validators.minLength(6),\n\n      ])],\n    })\n\n  }\n\n  ngOnInit() {\n  }\n\n\n}\n","\r\nexport class Book {\r\n    constructor(\r\n        public id: number,\r\n        public author: string,\r\n        public book: string,\r\n        public completed: boolean, ) { }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Book } from './book.model';\r\n\r\n\r\n\r\n@Injectable()\r\n\r\n\r\nexport class bookService {\r\n\r\n    data: Book[] = [\r\n        new Book(1, 'Джон Р. Р. Толкин', '\"Властелин колец\"', false),\r\n        new Book(2, 'Джейн Остин', '\"Гордость и предубеждение\"', false),\r\n        new Book(3, 'Филип Пулман', '\"Тёмные начала\"', false),\r\n        new Book(4, 'Дуглас Адамс', '\"Автостопом по галактике\"', false),\r\n        new Book(5, 'Джоан Роулинг', '\"Гарри Поттер и Кубок огня\"', false),\r\n        new Book(6, 'Харпер Ли', '\"Убить пересмешника\"', false),\r\n        new Book(7, 'Алан Александр Милн', '\"Винни Пух\"', false),\r\n        new Book(8, 'Джордж Оруэлл', '\"1984\"', false),\r\n        new Book(9, 'Клайв Стэйплз Льюис', '\"Лев, колдунья и платяной шкаф\"', false),\r\n        new Book(10, 'Шарлотта Бронте', '\"Джейн Эйр\"', false),\r\n    ];\r\n\r\n    getAll(): Book[] {\r\n        return this.data;\r\n    }\r\n\r\n    getById(id: number): Book {\r\n        return this.data.find(x => x.id == id);\r\n    }\r\n\r\n    update(book: Book) {\r\n        let toUpdate = this.getById(book.id);\r\n        Object.assign(toUpdate, book);\r\n    }\r\n\r\n    delite(book: Book) {\r\n        let toDelite = this.getById(book.id);\r\n        this.data.splice(this.data.indexOf(book), 1);\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersdataService {\n\n  constructor(private http: HttpClient) { }\n\n  getUsers() {\n    return this.http.get('https://jsonplaceholder.typicode.com/users')\n  }\n\n  getUser(userId) {\n    return this.http.get('https://jsonplaceholder.typicode.com/users/' + userId)\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}